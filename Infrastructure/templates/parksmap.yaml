apiVersion: template.openshift.io/v1
kind: Template
metadata:
  creationTimestamp: null
  name: parksmap
objects:
- apiVersion: apps.openshift.io/v1
  kind: DeploymentConfig
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewApp
    creationTimestamp: null
    generation: 4
    labels:
      app: parksmap
    name: parksmap
  spec:
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      app: parksmap
      deploymentconfig: parksmap
    strategy:
      activeDeadlineSeconds: 21600
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        annotations:
          openshift.io/generated-by: OpenShiftNewApp
        creationTimestamp: null
        labels:
          app: parksmap
          deploymentconfig: parksmap
      spec:
        containers:
        - env:
          - name: APPNAME
            valueFrom:
              configMapKeyRef:
                key: APPNAME
                name: parksmap
        - image: docker-registry.default.svc:5000/90cd-parks-dev/parksmap:latest
          imagePullPolicy: Always
          name: parksmap
          ports:
          - containerPort: 8080
            protocol: TCP
          - containerPort: 8443
            protocol: TCP
          - containerPort: 8778
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /ws/healthz/
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
    test: false
    triggers:
- apiVersion: v1
  data:
    APPNAME: ${APPNAME}
  kind: ConfigMap
  metadata:
    name: parksmap
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewApp
    creationTimestamp: null
    labels:
      app: parksmap
    name: parksmap
  spec:
    ports:
    - name: 8080-tcp
      port: 8080
      protocol: TCP
      targetPort: 8080
    - name: 8443-tcp
      port: 8443
      protocol: TCP
      targetPort: 8443
    - name: 8778-tcp
      port: 8778
      protocol: TCP
      targetPort: 8778
    selector:
      app: parksmap
      deploymentconfig: parksmap
    sessionAffinity: None
    type: ClusterIP
- apiVersion: route.openshift.io/v1
  kind: Route
  metadata:
    annotations:
      openshift.io/host.generated: "true"
    creationTimestamp: null
    labels:
      app: parksmap
    name: parksmap
  spec:
    host: parksmap-90cd-parks-dev.apps.na311.openshift.opentlc.com
    port:
      targetPort: 8080-tcp
    to:
      kind: Service
      name: parksmap
      weight: 100
    wildcardPolicy: None
  status:
    ingress:
    - conditions:
      - lastTransitionTime: 2018-12-14T16:18:12Z
        status: "True"
        type: Admitted
      host: parksmap-90cd-parks-dev.apps.na311.openshift.opentlc.com
      routerName: router
      wildcardPolicy: None
- description: AppName
  displayName: AppName
  name: APPNAME
  required: true
  value: "Parksmap (Dev)"